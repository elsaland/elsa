name: Build

on:
  push:
  pull_request:

jobs:
  build:
    name: Build

    runs-on: ${{ matrix.os }}
    env:
      GOPATH: ${{ github.workspace }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Setup repo
        uses: actions/checkout@v2
        with:
          submodules: true
          path: "./src/github.com/elsaland/elsa"

      - name: Setup node (for benchmarks)
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Setup go
        uses: actions/setup-go@v2

      - name: Setup deno (for benchmarks)
        uses: denolib/setup-deno@v2
        with:
          deno-version: v1.3.3

      - name: Install hyperfine (for benchmarks)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          wget https://github.com/sharkdp/hyperfine/releases/download/v1.10.0/hyperfine_1.10.0_amd64.deb
          sudo dpkg -i hyperfine_1.10.0_amd64.deb

      - name: Install go-bindata
        run: go get github.com/go-bindata/go-bindata

      - name: Run bootstrap
        working-directory: ./src/github.com/elsaland/elsa
        run: go run ./bootstrap/

      - name: Build
        working-directory: ./src/github.com/elsaland/elsa
        run: go build -o elsa-${{ matrix.os }} .

      - name: Benchmarks
        working-directory: ./src/github.com/elsaland/elsa
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          make build
          mkdir benchmarks
          make benchmark

      - name: Upload Elsa executables
        uses: actions/upload-artifact@v2
        with:
          name: elsa-${{ matrix.os }}
          path: ./src/github.com/elsaland/elsa/elsa-${{ matrix.os }}

      - name: Upload benchmark data
        uses: actions/upload-artifact@v2
        if: startsWith(matrix.os, 'ubuntu')
        with:
          name: benchmark-data
          path: ./src/github.com/elsaland/elsa/benchmarks
